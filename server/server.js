var express = require('express');
var app = express();
const apps = express();
var officegen = require('officegen');
const mysql = require("mysql")
const cors = require('cors');
const bodyParser = require('body-parser');
const { exec } = require('child_process');
app.use(bodyParser.json());
apps.use(bodyParser.json());
app.use(cors());
apps.use(cors())
var i = 0;
let restarting = true; // Flag to track whether a restart is in progress
const dbs = mysql.createConnection({
  user:"root",
  host:'localhost',
  password:null,
  database:"test",
}) 


apps.get("/api/posts",(req, res) => {
  dbs.query(`SELECT * FROM infos`,(err, result) => {
    if (err) {
      console.error(err) ;
      res.status(500).json({error: "error fetching data"})
    }else {
      res.json(result)
    }
  })
})
apps.post('/add', async (req, res) => {
  
  console.log(req.body)
  
  let data = {id:req.body.id, Name: req.body.name, N: req.body.N,IurAddress:req.body.IurAddress, FizAdress:req.body.FizAdress,HeadNameSurname:req.body.HeadNameSurname,ContactInfo:req.body.ContactInfo, Inspector:req.body.Inspector,womans:req.body.womans, mans:req.body.mans, "dates-day": req.body.dates.day, "dates-month": req.body.dates.month, "dates-year": req.body.dates.year, "date-day": req.body.date.day, "date-month" : req.body.date.month, "date-year" : req.body.date.year, ileg:req.body.ileg, preg: req.body.preg, producer:req.body.producer, city:req.body.city, datee:req.body.datee, datees: req.body.datees,"checkbox-1":req.body.checkboxes[0],"checkbox-2":req.body.checkboxes[1],"checkbox-3":req.body.checkboxes[2],"checkbox-4":req.body.checkboxes[3],"checkbox-5":req.body.checkboxes[4],"checkbox-6":req.body.checkboxes[5],"checkbox-7":req.body.checkboxes[6],"checkbox-8":req.body.checkboxes[7],"checkbox-9":req.body.checkboxes[8],"checkbox-10":req.body.checkboxes[9],"checkbox-11":req.body.checkboxes[10],"checkbox-12":req.body.checkboxes[11],"checkbox-13":req.body.checkboxes[12],"checkbox-14":req.body.checkboxes[13],"checkbox-15":req.body.checkboxes[14],"checkbox-16":req.body.checkboxes[15],"checkbox-17":req.body.checkboxes[16],"checkbox-18":req.body.checkboxes[17],"checkbox-19":req.body.checkboxes[18],"checkbox-20":req.body.checkboxes[19],"checkbox-21":req.body.checkboxes[20],"checkbox-22":req.body.checkboxes[21],"checkbox-23":req.body.checkboxes[22],"checkbox-24":req.body.checkboxes[23],"checkbox-25":req.body.checkboxes[24],"checkbox-26":req.body.checkboxes[25],"checkbox-27":req.body.checkboxes[26],"checkbox-28":req.body.checkboxes[27],"checkbox-29":req.body.checkboxes[28]};
  let sql = 'INSERT INTO infos SET ?';

  dbs.query(sql, data, (err, result) => {
    if (err) {
      console.error(err.message);
      res.status(500).send('Database error');
    } else {
      console.log('Data inserted successfully');
      res.send('Data inserted successfully');
    }
  });
});

apps.post("/change/data", (req, res) => {
  var idToCheck = Number(req.body.num);
  idToCheck++
  // Assuming you're using query parameters
  const query = `SELECT * FROM infos WHERE id = ?`;
  dbs.query(query, [idToCheck], (error, results) => {
    if (error) {
      console.error('Error querying the database:', error);
      res.status(500).json({ error: 'Internal server error' });
    } else {
      if (results.length > 0) {
        const obj =  req.body.data
        // ID exists
        const updateUser = {
          Name : obj.name, 
        N:obj.N,
      IurAddress: obj.IurAddress,
    FizAdress:obj.FizAdress,
  HeadNameSurname:obj.HeadNameSurname,
ContactInfo:obj.ContactInfo,
Inspector:obj.Inspector,
womans: obj.womans,
mans:obj.mans,
ileg:obj.ileg,
preg:obj.preg,
producer:obj.producer,
city:obj.city,
datee:obj.datee,
datees:obj.datees,
"date-day":obj.datee.slice(0,4),
"date-month":obj.datee.slice(6,7),
"date-year":obj.datee.slice(9,10),
"dates-day":obj.datees.slice(0,4),
"dates-month":obj.datees.slice(6,7),
"dates-year":obj.datees.slice(9,10),
"checkbox-1":obj.checkboxes[0],
"checkbox-2":obj.checkboxes[1],
"checkbox-3":obj.checkboxes[2],
"checkbox-4":obj.checkboxes[3],
"checkbox-5":obj.checkboxes[4],
"checkbox-6":obj.checkboxes[5],
"checkbox-7":obj.checkboxes[6],
"checkbox-8":obj.checkboxes[7],
"checkbox-9":obj.checkboxes[8],
"checkbox-10":obj.checkboxes[9],
"checkbox-11":obj.checkboxes[10],
"checkbox-12":obj.checkboxes[11],
"checkbox-13":obj.checkboxes[12],
"checkbox-14":obj.checkboxes[13],
"checkbox-15":obj.checkboxes[14],
"checkbox-16":obj.checkboxes[15],
"checkbox-17":obj.checkboxes[16],
"checkbox-18":obj.checkboxes[17],
"checkbox-19":obj.checkboxes[18],
"checkbox-20":obj.checkboxes[19],
"checkbox-21":obj.checkboxes[20],
"checkbox-22":obj.checkboxes[21],
"checkbox-23":obj.checkboxes[22],
"checkbox-24":obj.checkboxes[23],
"checkbox-25":obj.checkboxes[24],
"checkbox-26":obj.checkboxes[25],
"checkbox-27":obj.checkboxes[26],
"checkbox-28":obj.checkboxes[27],
"checkbox-29":obj.checkboxes[28],


        }
        const updateQuery = `UPDATE infos SET ? WHERE id = ?`;
        dbs.query(updateQuery,[updateUser,idToCheck],(updateError) => {
          if (updateError) {
            console.error("error updating data:" , updateError);
            res.status(500).json({error: "Internal server Error" });
          }
            else {
              res.status(200).json({
                message:"data updated succesfully" }) 
              }
        })
      } else {
        // ID does not exist
        res.status(200).json({ exists: false });
      }
    }
  });
})
apps.post("/remover", (req, res) => {
  const id = Number(req.body.id)
  const deleteQuery = 'DELETE FROM infos WHERE id = ?'
  dbs.query(deleteQuery, [id], (error,result) => {
    if (error) {
      console.error('Error deleting data:', error);
      res.status(500).json({ error: 'Internal server error' });
    } else {
      res.status(200).json({ message: 'Data deleted successfully' });
    }
  })
  var a = 0
})
apps.get('/correct', (req, res) => {
  const selectAllQuery = 'SELECT * FROM infos'; // Replace 'users' with your table name

  dbs.query(selectAllQuery, (error, results) => {
    if (error) {
      console.error('Error executing query:', error);
      res.status(500).json({ error: 'Internal server error' });
    } else {
      var a = 0
      // Convert the result set to an object
      const tableAsObject = {};
      results.map((e, i) => {
        if (Number(e.id) == (i + 1)) {
          a ++
        }
        else {
          const userIdUpdate = i + 1;
          const userid = Number(e.id)
          const action = `UPDATE infos SET id = ? WHERE id = ?`;
          dbs.query(action, [userIdUpdate, userid], (error) => {
            if (error) {
              console.error('Error updating data:', error);
              res.status(500).json({ error: 'Internal server error' });
            } else {
              res.status(200).json({ message: 'Data updated successfully' });
            }
          });
          
            
          
        }
      })
    }
  });
});

apps.get('/api/infos', (req, res) => {
  const sql = 'SELECT * FROM infos';
  dbs.query(sql, (err, results) => {
    if (err) throw err;
    res.json(results);
  });
});



app.get('/restart-server', (req, res) => {
  // Check if a restart is already in progress
  if (restarting) {
    res.status(400).json({ error: 'Restart already in progress' });
    restartServer(res);
    restarting = false;
    return;
  }

  // Set the flag to indicate that a restart is now in progress

  // Trigger the restart
});

function restartServer(response) {
  exec('pm2 restart server --silent --no-daemon', (error, stdout, stderr) => {
    if (error) {
      console.error(`Error: ${error.message}`);
      response.status(500).json({ error: 'Internal Server Error' });
      return;
    }
    console.log(`stdout: ${stdout}`);
    console.error(`stderr: ${stderr}`);
    response.json({ message: 'Server is restarting' });
  });
}
app.post('/api/data', async (req, res) => { 
  // get the input data from the request body
  
  var checkNo = 0 
  var  input = req.body.select;
  input.checkboxes.map((e) => {
    if(e == 'არა') {
      checkNo++
    }
  })
  console.log(checkNo)
  var c = input.datees.slice(6,7)
  var l = input.datee.slice(6,7)
  console.log(input.datee.slice(6,7))
  var month = (c) => {
    if(Number(c) == 1) {
      return 'იანვრის'
    }else if (Number(c) == 2) {
      return "თებერვლის"
    }else if (Number(c) == 3 ) {
      return "მარტის" 
    }else if (Number(c) == 4) {
      return 'აპრილის'
    }else if (Number(c) == 5) {
      return 'მაისის'
    }else if (Number(c) == 6) {
      return 'ივნისის'
    }else if (Number(c) == 7) {
      return 'ივლისის'
    }else if (Number(c) == 8) {
      return 'აგვისტოს'
    }else if (Number(c) == 9) {
      return 'სექტემბრის'
    }else if (Number(c) == 10) {
      return 'ოქტომბრის'
    }else if (Number(c) == 11) {
      return 'ნოემბრის'
    }else if (Number(c) == 12) {
      return 'დეკემბრის'
    }
  }
  var months = (c) => {
    if(Number(c) == 1) {
      return 'იანვარს'
    }else if (Number(c) == 2) {
      return "თებერვალს"
    }else if (Number(c) == 3 ) {
      return "მარტს" 
    }else if (Number(c) == 4) {
      return 'აპრილს'
    }else if (Number(c) == 5) {
      return 'მაისს'
    }else if (Number(c) == 6) {
      return 'ივნისს'
    }else if (Number(c) == 7) {
      return 'ივლისს'
    }else if (Number(c) == 8) {
      return 'აგვისტოს'
    }else if (Number(c) == 9) {
      return 'სექტემბერს'
    }else if (Number(c) == 10) {
      return 'ოქტომბერს'
    }else if (Number(c) == 11) {
      return 'ნოემბერს'
    }else if (Number(c) == 12) {
      return 'დეკემბერს'
    }
  }
  var h = input.datees.slice(8,10)
  if(h[0] == 0) {
    h = h[1]
  }
  var f = input.datees.slice(0,4)
  var d = month(c)
  var e = months(l)
  var g = input.datee.slice(0,4)
  var i = input.datee.slice(8,10)
  if(i[0] == 0) {
    i = i[1]
  }

  var city = input.city.slice(0, -1)
  // use the input data in the backend logic
  // use the input data in the backend logic
  const zero = "დანართი №1"
const first = "საქართველოს ოკუპირებული ტერიტორიებიდან დევნილთა, შრომის,"
const second = "ჯანმრთელობისა და სოციალური დაცვის სამინისტრო"
const third = "სსიპ შრომის ინსპექციის სამსახური"
const fourth = "მისამართი: თბილისი, თამარაშვილის ქ. 15ა"
const fifth = "ტელ; 1575"
const sixth = "მ ი თ ი თ ე ბ ა № ------/ო"
const seventh = "შედგენის თარიღი --.--.----წ"
const eighth = `           საქართველოს ორგანული კანონის „შრომის უსაფრთხოების შესახებ“ მე-18 მუხლის მე-2 პუნქტის შესაბამისად, შრომის უსაფრთხოების ნორმების შემოწმების განმახორციელებელი სამსახურის მიერ, დამრღვევის მიმართ სახდელის სახედ გაფრთხილების ან ჯარიმის გამოყენების შემთხვევაში გასცემს მითითებას გონივრული ვადაში დარღვევების გამოსწორების შესახებ ობიექტისთვის:`
const nineth = "ობიექტის დასახელება: "
const tenth =  `„${input.name}“,`
const eleven = "ინსპექტირების ჩატარების საფუძველი: "
const tweleve =  `ბრძანება N :${input.N}` 
const thirteen = `იურიდიული მისამართი: `
const thirteens = input.IurAddress
const fourteen = `ფაქტობრივი მისამართი: `
const fourteens = input.FizAdress
const fifteen = `დირექტორი: `
const fifteens = input.HeadNameSurname
const sixteen = "ეროვნული კლასიფიკატორი "
const seventeen = "(NACE 2016): "
const eighteen = "C.20.12.0 საღებარების და პიგმენტების წარმოება"
const nineteen = "C.23.64.0 ნარევების წარმოება"
const twenty = "H.52.10.0 დასაწყობება და შენახვა"
const twentyOne = "H.52.24.0 ტვირთის დატვირთვა-განტვირთვა"
const twentyTwo = "მე-80 დადგენილების მიხედვით:"
const twentyThree = "  მაღალი რისკის სექტორი"
const twentyFour = `საკონტაქტო პირი/ინფორმაცია: ${input.ContactInfo} `
const twentyFive = `შრომის უსაფრთხოების მენეჯერი: ${input.Inspector}`
const twentySix = "დასაქმებულთა რაოდენობა-  "
const twentySeven = `სულ:${Number(input.womans) + Number(input.mans) + Number(input.ileg) + Number(input.preg)} პირი; ქალი - ${input.womans}; კაცი - ${input.mans}; არასრულწლოვანი -${input.ileg}; ორსული, ახალნამშობიარები/ მეძური ქალი-${input.preg}. `
const twentyEight = "დასაქმებულთა წარმომადგენელი - "
const twentyNine =  `${input.producer == "" ? " არ არის წარმოდგენილი." : input.producer}`
const thirty = `           საქართველოს ოკუპირებული ტერიტორიებიდან დევნილთა, შრომის, ჯანმრთელობისა და სოციალური დაცვის სამინისტროს სსიპ შრომის ინსპექციის სამსახურის მიერ საქართველოს ორგანული კანონი „შრომის უსაფრთხოების შესახებ“ შესაბამისად ${f} წლის ${h} ${d}  ბრძანება N „${input.N}“ - ს საფუძველზე გეგმური ინსპექტირების ფარგლებში ${g} წლის ${i} ${e} ქ.„${city}“-ში შპს „${input.name}“-ის ობიექტზე განხორციელდა ინსპექტირება. ინსპექტირების პროცესში მოვახდინეთ დამსაქმებელთან და დასაქმებულებთან გასაუბრება, ობიექტის  დათვალიერება, ფოტო-ვიდეო გადაღება და შრომის უსაფრთხოების ნორმებთან დაკავშირებული დოკუმენტაციის გამოთხოვა.`
const thirtyOne = "შემოწმების შედეგად გამოვლინდა შრომის უსაფრთხოების ნორმების დარღვევა. კერძოდ:"
const thirtyTwo = "           საქართველოს ორგანული კანონი „შრომის უსაფრთხოების შესახებ“ შესაბამისად დამსაქმებელი ვალდებულია დანიშნოს/მოიწვიოს შრომის უსაფრთხოების სპეციალისტი, რომელიც აკმაყოფილებს, “შრომის უსაფრთხოების სპეციალისტის აკრედიტებული პროგრამის მოცულობის, განხორციელების წესისა და პირობების დამტკიცების შესახებ“ საქართველოს ოკუპირებული ტერიტორიებიდან დევნილთა, შრომის, ჯანმრთელობისა და სოციალური დაცვის მინისტრის 2018 წლის 31 ოქტომბრის N01/25ნ  ბრძანებით დადგენილ მოთხოვნებს."
const thirtyThree = "           შრომის უსაფრთხოების შესახებ“ საქართველოს ორგანული კანონის შესაბამისად დამსაქმებელმა მუშაობის ყველა ეტაპზე ჯანმრთელობისათვის ზიანის მიყენების რისკის შესამცირებლად ან აღმოსაფხვრელად, საწარმოს სიდიდიდან და საქმიანობის სპეციფიკიდან გამომდინარე, მინისტრის ადმინისტრაციულ-სამართლებრივი აქტით (2020 წლის 30 იანვარის ბრძანება №01-15/ნ) დადგენილი წესის მიხედვით უნდა შეაფასოს რისკები, უნდა განაახლოს რისკის შეფასების შესახებ დოკუმენტი და მიიღოს შესაბამისი ზომები. საფრთხის შემცველი ფაქტორების ანალიზის საფუძველზე დამსაქმებელმა უნდა შეიმუშაოს წერილობითი დოკუმენტი, რომელიც უნდა ითვალისწინებდეს დასაქმებულისა და სამუშაო სივრცეში მყოფი სხვა პირის ჯანმრთელობისათვის ზიანის მიყენების რისკის შემცირების ან აღმოფხვრის ღონისძიებებს, რომლებიც უნდა განხორციელდეს ყველა სახის საქმიანობის დროს და საწარმოს მმართველობის ყველა დონეზე, ამ ღონისძიებების განხორციელების ვადებს, განმახორციელებლებს და განხორციელებისათვის საჭირო სახსრებს. საქართველოს ოკუპირებული ტერიტორიებიდან დევნილთა, შრომის, ჯანმრთელობისა და სოციალური დაცვის მინისტრის 2020 წლის 30 იანვარის ბრძანება №01-15/ნ - ის მიხედვით რისკის შეფასების დოკუმენტის მონაცემების და შედეგების გადახედვა/განახლება უნდა განხორციელდეს პერიოდულად, იდენტიფიცირებული ახალი საფრთხის, განხორციელებული ტექნიკური ცვლილების, დასაქმებულის მიერ სამუშაო ადგილის/სივრცის, სამუშაო პროცესის ცვლილების, სამუშაო სივრცეში მომხდარი უბედური შემთხვევის, სამუშაო გარემო პირობების ცვლილების ან სხვა გარემოების არსებობის შემთხვევაში, რამაც შეიძლება წარმოშვას ახალი საფრთხე, მაგრამ არაუმეტეს 30 დღის ვადაში. კომპანიის მიერ მოწოდებულია 2023 წლის 05 აპრილს შედგენილი საფრთხეების იდენტიფიცირებისა და რისკების შეფასების დოკუმენტი, რომელიც არ შეესებამება კანონმდებლობას. დოკუმენტში არ არის იდენტიფიცირებული ობიექტზე არსებული ყველა საფრთხე და არ არის შესაბამისი პრევენციული ღონისძიებები დანერგილი/დაგეგმილი."
const thirtyFour = "           ინსპექტირების პროცესში  ვერ მოხდა სწავლება/ინსტრუქტაჟის შესახებ დოკუმენტაციის სრულად წარმოდგენა. ხოლო კომპანიის მიერ ელექტრონულად მოწოდებული დოკუმენტაცია არ არის შესაბამისობაში კანონმდებლობასთან, კერძოდ: არ იქნა მოწოდებული „შრომის უსაფრთხოების შესახებ“ საქართველოს ორგანული კანონის, „სამუშაო სივრცეში ინდივიდუალური დაცვის საშუალებების გამოყენებისას უსაფრთხოებისა და ჯანმრთელობის დაცვასთან დაკავშირებული მინიმალური მოთხოვნების დამტკიცების თაობაზე“ საქართველოს მთავრობის 2022 წლის 23 დეკემბრის №590, „სამუშაო სივრცეში უსაფრთხოებისა და ჯანმრთელობის დაცვის მინიმალური მოთხოვნების ტექნიკური რეგლამენტის“ საქართველოს მთავრობის 2022 წლის 1 ივლისის №341, სამუშაო სივრცეში უსაფრთხოების ან/და ჯანმრთელობის დაცვასთან დაკავშირებული ნიშნების განთავსების მინიმალური მოთხოვნების დამტკიცების თაობაზე“ ,,ტექნიკური რეგლამენტი“-ს საქართველოს მთავრობის 2022 წლის 16 სექტემბრის №457 და „ტვირთის ხელით აწევისას უსაფრთხოებისა და ჯანმრთელობის დაცვის მინიმალური მოთხოვნების“ შესახებ საქართველოს მთავრობის 2023 წლის 1 მაისის №167 დადგენილებების საფუძველზე შედგენილი სწავლების დამადასტურებელი დოკუმენტაცია. ასევე დამსაქმებელი ვალდებულია უზრუნველყოს დასაქმებულებისათვის სწავლების და ინსტრუქტაჟის ჩატარება და მათ გასაგებ ენაზე მიაწოდოს ინფორმაცია შრომის უსაფრთხოების უზრუნველსაყოფად სამართლებრივი და სხვა ნორმების და უსაფრთხო შრომის პრინციპების შესახებ, საწარმოს სიდიდის, დასაქმებულთა რაოდენობის, სამუშაო პირობების, საფრთხის ხარისხის, ხასიათისა და სტრუქტურის და შესაბამისი რისკების გათვალისწინებით, ასევე სამუშაო სივრცეში არსებული ტექნიკური აღჭურვილობების მოწყობილობების და დანადგარების მწარმოებლის ტექნიკური პასპორტის და ტექნიკური მახასიათებლების შესაბამისად. ასევე დამსაქმებელი ვალდებულია: დასაქმებულებს, სხვა პირებს ან/და დასაქმებულთა წარმომადგენლებს მიაწოდოს ადეკვატური ინფორმაცია და ინსტრუქციები ინდივიდუალური დაცვის საშუალების თითოეული დეტალისა და მათი გამოყენების წესის შესახებ და უზრუნველყოს ინდივიდუალური დაცვის საშუალებების თითოეული დეტალის შესახებ ინფორმაციის გავრცელება და ხელმისაწვდომობა საწარმოს ან/და დაწესებულების შიგნით; წინასწარ აცნობოს დასაქმებულებსა და სხვა პირებს იმ საფრთხ(ეებ)ის შესახებ, რომლისგანაც/რომლებისგანაც იცავს მათ ინდივიდუალური დაცვის საშუალებები ასევე დასაქმებულებსა და სხვა პირებს."
const thirtyFive = "           სწავლება/ტრენინგების/ ინსტრუქტაჟების დოკუმეტაცია უნდა მოიცავდეს შემდეგს: "
const thirtySIx = "           ობიექტზე დასაქმებულები სრულად არ იყვნენ აღჭურვილნი ინდივიდუალური დაცვის საშუალებებით. მაგალითად: სპეც.ფეხსაცმელით, სპეც.ტანსაცმლით, სპეც.ხელთათმნით, სახის და თვალის დამცავი საშუალებებით, ჩაფხუტით, შემდუღებლის სპეც.აღჭურვილობით და სხვა. ასევე, ადგილზე წარმოდგენილ დიელექტრიკულ დაცვის საშუალებებს (ხელთათმანი და ბოტი) არ ქონდა ვარგისიანობის დამადასტურებელი ლაბორატორიული დასკვნა. დამსაქმებლის ვალდებულებაა დასაქმებული და სამუშაო სივრცეში მყოფი სხვა პირი უფასოდ აღჭურვოს აუცილებელი ეფექტიანი ინდივიდუალური დაცვის საშუალებებით იქ, სადაც ეს აუცილებელია მათი სიცოცხლის ან ჯანმრთელობის დასაცავად, უზრუნველყოს ინდივიდუალური დაცვის საშუალებების სისუფთავე და ტექნიკური გამართულობა. ასევე უნდა უზრუნველყოს ინდივიდუალური დაცვის საშუალებების და სხვა დამცავი საშუალებების მოვლა-გასუფთავება, გააკონტროლოს მათი სწორად გამოყენება და საჭიროების შემთხვევაში დროულად შეცვალოს ისინი. ასევე დამსაქმებელმა ინდივიდუალური დაცვის საშუალებების ნუსხა უნდა განსაზღვროს დასაქმებულის პროფესიის გათვალისწინებით და დასაქმებულს მიაწოდოს ინფორმაცია მათი გამოყენების წესის შესახებ. სხეულის ნაწილებთან დაკავშირებული რისკები/საფრთხეები, რომელთაგანაც დაცვა უზრუნველყოფილი უნდა იყოს ინდივიდუალური დაცვის საშუალებებით, მოცემულია „სამუშაო სივრცეში ინდივიდუალური დაცვის საშუალებების გამოყენებისას უსაფრთხოებისა და ჯანმრთელობის დაცვასთან დაკავშირებული მინიმალური მოთხოვნების დამტკიცების თაობაზე“ საქართველოს მთავრობის 2022 წლის 23 დეკემბრის №590  დადგენილების №1 დანართში. "
const thirtySeven = "           ასევე არ არის წარმოდგენილი დანართი N1-ის შესაბამისი დოკუმენტი. ინდივიდუალური დაცვის საშუალებებისა და სამუშაო აქტივობების არასრული ჩამონათვალი, რომლებიც უზრუნველყოფს რისკებისგან/საფრთხეებისგან დაცვას და რომელთა განხორციელებისას უნდა მოხდეს ინდივიდუალური დაცვის საშუალებების გამოყენება, მოცემულია ზემოთხსენებული რეგლამენტის №2 და №3 დანართებში, ხოლო, არსებული სამუშაო სპეციფიკიდან გამომდინარე, არსებული რისკების შეფასების საფუძველზე გამოსაყენებელი ინდივიდუალური დაცვის საშუალებების შერჩევის ფორმა ამ რეგლამენტის №4 დანართში."
const thirtyEight = "           შრომის უსაფრთხოების შესახებ ორგანული კანონის მიხედვით კოლექტიური დაცვის საშუალებები არის ტექნიკური და საინჟინრო საშუალებების ერთობლიობა, რომლებიც კონსტრუქციულად და ფუნქციურად დაკავშირებულია საწარმოო გარემოსა და სამუშაო პროცესთან და განკუთვნილია საფრთხის შემცველი ფაქტორების თავიდან ასაცილებლად ან შესამცირებლად. საწარმო არ არის აღჭურვილი კოლექტიური დაცვის საშუალებებით, კერძოდ: "
const thirtyNine = `           საქართველოს კანონმდებლობით გათვალისწინებული პერიოდულობით დამსაქმებელი ვალდებულია შეამოწმოს, გაზომოს და შეაფასოს საწარმოო გარემოს ფიზიკური ფაქტორები (მიკროკლიმატის პარამეტრები, ვიბრაცია, ხმაური, მტვერი, მავნე აირები და ა.შ.) და გაატაროს შესაბამისი პრევენციული ღონისძიებები. საწარმოო სათავსებში, რომლებშიც მიკროკლიმატის დასაშვები ნორმატიული სიდიდეების მაჩვენებლების დაცვა შეუძლებელია საწარმოო პროცესებისადმი ტექნოლოგიური მოთხოვნების ან ეკონომიკურად დასაბუთებული მიზანშეუწონლობის გამო, უზრუნველყოფილი უნდა იყოს მომუშავეთა ჯანმრთელობის დაცვისათვის მიმართული სხვა ღონისძიებები (მაგ: დროის დაცვით მუშაობა და სხვა). მიკროკლიმატის მონაცემების გაზომვა ჰიგიენურ მოთხოვნებთან მათი შესაბამისობის კონტროლის მიზნით უნდა ჩატარდეს წლის ცივ და თბილ პერიოდებში. გაზომვათა სიხშირე წლის ორივე პერიოდში განისაზღვრება წარმოების პროცესის სტაბილურობით, ტექნოლოგიური და სანიტარიულ-ტექნიკური აღჭურვილობის ფუნქციონირებით. გაზომვის დროისა და უბნების შერჩევისას აუცილებლად გათვალისწინებული უნდა იყოს ყველა ფაქტორი, რომელიც მოქმედებს სამუშაო ადგილის მიკროკლიმატზე (ტექნოლოგიური პროცესის ფაზები, ვენტილაციის და გათბობის სისტემების ფუნქციონირება და სხვ.). მიკროკლიმატის მაჩვენებლების გაზომვის სიხშირე არ უნდა იყოს არანაკლებ 3-სა ცვლაში (დასაწყისში, შუაში და ბოლოს); გაზომვები უნდა ჩატარდეს სამუშაო ადგილებზე, თუ სამუშაო ადგილს წარმოადგენს საწარმოო სათავსოს რამდენიმე უბანი, მაშინ გაზომვები ხორციელდება ყველა მათგანზე. სამუშაო ადგილების მქონე სათავსებში, ტემპერატურის, შეფარდებითი ტენიანობის და ჰაერის მოძრაობის სიჩქარის გაზომვის უბნები უნდა განაწილდეს თანაბრად შენობის მთელ პერიმეტრზე არსებული ფართობის და უბნების შესაბამისად. ადამიანის ორგანიზმზე ხმაურის მოქმედება დაკავშირებულია მაღალი მწარმოებლობის მქონე დანადგარების გამოყენებასთან. ხმაური ახდენს ტრავმულ მოქმედებას სმენის ორგანოზე. ხმაურით გამოწვეული სმენის მყარი დაქვეითება ვითარდება თანდათანობით. სმენის პროფესიული დაქვეითების სტადიებს ხშირად წინ უსწრებს თავის ტკივილი, თავბრუსხვევა და სხვა. ხმაური ასევე დიდ გავლენას ახდენს ნერვულ და გულ-სისხლძარღვთა სისტემებზე. ინტენსიური საწარმოო ხმაურის მოქმედებით გამოწვეული დაავადებების პროფილაქტიკის ეფექტურ საშუალებას წარმოადგენს ტექნიკური ზომების მიღება ხმაურისგან დამცავი კოლექტიური დაცვის საშუალებებით.საშუალებებით. მტვრის ხანგრძლივმა შესუნთქვამ შესაძლოა გამოიწვიოს ზემო სასუნთქი გზებისა და ფილტვის ქრონიკული პროფესიული დაავადება. ებისმიერი მტვრით გამოწვეული პროფესიული პათოლოგიის პროფილაქტიკის საფუძველს წარმოადგენს ტექნიკური ღონისძიებები, რომელთა საშუალებითაც მიღწეული იქნება სამუშაო `
const fourty = "           ზონის ჰაერში დამტვერიანების დონის შემცირება და ნორმამდე დაყვანა (საწარმოო პროცესების მექანიზაცია, ავტომატიზაცია დისტანციური მართვით, ჰერმეტიზაცია, ეფექტური ადგილობრივი და საერთო ვენტილაციის მოწყობა, მტვრის დალექვა სპეციალური დასანამი საშუალებების გამოყენებით და ა.შ.)."
const fourtyOne = "           საქართველოს მთავრობის 2022 წლის 16 სექტემბრის №457 დადგენილებით ,,ტექნიკური რეგლამენტის − სამუშაო სივრცეში უსაფრთხოების ან/და ჯანმრთელობის დაცვასთან დაკავშირებული ნიშნების განთავსების მინიმალური მოთხოვნების დამტკიცების თაობაზე“ განსაზღვრულია, რომ დამსაქმებელმა, სამუშაო სივრცესა და სამუშაო ადგილზე, სადაც  საფრთხეების თავიდან აცილება ან, მისი რისკის შეფასების საფუძველზე, დასაშვებ დონემდე შემცირება კოლექტიური დაცვის საშუალებების ან სამუშაოს ორგანიზების ღონისძიებების, მეთოდების ან პროცედურების გამოყენებით შეუძლებელია, უნდა უზრუნველყოს უსაფრთხოების ან/და ჯანმრთელობის დაცვის ნიშნების განთავსება. ინსპექტირებისას კი ობიექტზე არ იყო განთავსებული უსაფრხოების ან/და ჯანმრთელობის დაცვასთან დაკავშირებული შესაბამისი   სავალდებულო, მაფრთხილებელი და ამკრძალავი ნიშნების განთავსება. მაგალითად: "
const fourtyTwo = "           დასაქმებულებთან და ორგანიზაციის პასუხისმგებელ პირებთან  გასაუბრებისას დადგინდა, რომ დასაქმებულები არ გადიან პერიოდულ სამედიცინო  შემოწმებას"
const fourtyThree = "           კომპანიის მხრიდან ვერ იქნა წარმოადგენილი სამუშაო სივრცეში უბედური შემთხვევების, პროფესიული დაავადებების და საშიში შემთხვევების აღრიცხვის დოკუმენტი. (ე.წ. საწარმოო ტრავმატიზმის აღრიცხვის ჟურნალი)."
const fourtyFour = "           აბანო-გასახდელებში, საპირფარეშოებში, კვების და შესვენება/დასვენებისთვის გამოყოფილი ადგილებში, არ არის გატარებული/განხორციელებული სანიტარიულ-ჰიგიენური და სანიტარიულ-ტექნიკურ სამუშაოები. ჩაატარეთ კოსმეტიკური სახის სარემონტო სამუშაოები კერძოდ; "
const fourtyFive = "           შიდა მარეგულირებელი ნორმებით არ არის განსაზღვრული პირი, რომელიც  უფლებამოსილი იქნება ზედამხედველობა გაუწიოს და არ დაუშვას სამუშაოზე ალკოჰოლური, ნარკოტიკული და ფსიქოტროპული  სიმთვრალის მდგომარეობაში მყოფი დასაქმებული."
const fourtySix = "           ობიექტზე სადაც არის სიმაღლიდან ვარდნის პოტენციური საფრთხე არ არის დამონტაჟებული სიმაღლიდან ვარდნის დამცავი საშუალება, კერძოდ: "
const fourtySeven = "            გამოიყენება არაქარხნული წესით დამზადებული კიბეები, რომლებიც ხმარებიდან უნდა იყოს ამოღებული და ჩანაცვლდეს ქარხნულით."
const fourtyEight = "           საქართველოს ორგანული კანონის „შრომის უსაფრთხოების შესახაბე“ შესაბამისად დამსაქმებელი ვალდებულია მოახდინოს ობიექტზე არსებული მანქანა-დანდგარების და ტექნიკური აღჭურვილობების უსაფრთხოების მდგომარეობის შემოწმება, ხოლო  საქართველოს მთავრობის 2022 წლის 1 ივლისის № 341 დადგენილება „სამუშაო სივრცეში უსაფრთხოებისა და ჯანმრთელობის დაცვის მინიმალური მოთხოვნების შესახებ ტექნიკური რეგლამენტის დამტკიცების თაობაზე“ შესაბამისად რისკის დონისა და მწარმოებლის მითითებების (ტექნიკური პასპორტი, ტექნიკური მახასიათებლები და სხვა) გათვალისწინებით, დამსაქმებელმა უნდა უზრუნველყოს უსაფრთხოების მოწყობილობებისა და დამცავი აღჭურვილობის რეგულარული შემოწმება და შეკეთება, მოახდინოს რისკების პრევენცია და გაატაროს საფრთხეების აღმოფხვრისთვის აუცილებელი ღონისძიებები. ორგანიზაციაში არ არის უზრუნველყოფილი სამუშაო სივრცეში არსებული მოწყობილობების და დანადგარების ტექნიკური გამართულობა, არ ხდება მათი ექსპლუატაცია მწარმოებლის ტექნიკური პასპორტის და ტექნიკური მახასიათებლების შესაბამისად. კომპანიამ ვერ წარმოადგინა ობიექტზე მოქმედი "
const fourtyNine = "           „სამუშაო სივრცეში უსაფრთხოებისა და ჯანმრთელობის დაცვის მინიმალური მოთხოვნების შესახებ ტექნიკური რეგლამენტის დამტკიცების თაობაზე“ შესაბამისად ორგანიზაციაში არ ხდება სამუშაო სივრცის რეგულარული დასუფთავება, სამუშაო ადგილები, მოწყობილობები და დანადგარები არ არის მოწესრიგებული/მოწყობილი იმგვარად, რომ დასაქმებულთა სამუშაო ადგილები იყოს მუდმივად სუფთა."
const fifty = "           სამუშაო სივრცეები არ არის მოწყობილი ერგონომიულად და სამუშაო არ არის ადაპტირებული დასაქმებულზე, კერძოდ, "
const fiftyOne = "           ამწე მოწყობილობებს არ უტარდება პერიოდული ტექნიკური ინსპექტირება."
const fiftyTwo = "           დამსაქმებელი არ უზრუნველყოფს რეგლამენტის მოთხოვნათა მიხედვით ამწის მომსახურე პერსონალის სწავლებას და ცოდნის პერიოდულ შემოწმებას. "
const fiftyThree = "           ორგანიზაციაში არ არის დანიშნული პასუხისმგებელი ინჟინერ-ტექნიკური მუშაკები ამწეების ტექნიკური გამართულობის, უსაფრთხო ექსპლუატაციის და ზედამხედველობის უზრუნველსაყოფად. "
const fiftyFour = "           მოსაწყობია ამწის სამართავი კაბინა, არ არის აღჭურვილი ამწის მემანქანისათვის განკუთვნილი სტაციონარული (რეგულირებადი) სკამით ისე, რომ ამწის მემანქანეებმა მჯდომარე პოზიციაში შეძლოს ამწის მართვა და ტვირთის გადაადგილებაზე დაკვირვება. "
const fiftyFive = "           კაბინები არ არის შესრულებული და შემინული ისე, რომ უზრუნველყოფილი იყოს მათში სათანადო ტემპერატურული რეჟიმი და ჰაერის მიმოქცევა სტანდარტების შესაბამისად, ამწის კაბინაში უზრუნველყოფილი უნდა იყოს ოპტიმალური მიკროკლიმატური პირობები, რომელიც დადგენილია ადამიანის ოპტიმალური სითბური და ფუნქციური მდგომარეობის კრიტერიუმების მიხედვით. ამ მიზნით ამწის კაბინებში უზრუნველყავით შესაბამისი საინჟინრო ღონისძიებები. ობიექტზე დარღვეულია ელექტროუსაფრთხოება. კერძოდ: არ არის დახურული და დაკეტილი ელექტროდანადგარების და ელ.გამანაწილებლების შენობების კარები, მოქმედე ლექტროდანადგარებში მუშაობა მიმდინარეობს თვითნებურად, სამუშაოები არ წარმოებს განწესის ან განკარგულების შესაბამისად. ელექტროდანადგარებზე მომუშავე პერსონალი სამუშაოს სპეციფიკიდან გამომდინარე არ არის გაცნობილი წინამდებარე წესებს დაკავებული თანამდებობების ან პროფესიის შესაბამისად. მომუშავე ვალდებულია აღნიშნული მოწმობა სამუშაოზე ყოფნის დროს მუდმივად იქონიოს თან."
const fiftySix = "           ობიექტზე დარღვეულია ელექტროუსაფრთხოება. კერძოდ: არ არის დახურული და დაკეტილი ელექტროდანადგარების და ელ.გამანაწილებლების შენობების კარები."
const fiftySeven = "           მოქმედ ლექტროდანადგარებში მუშაობა მიმდინარეობს თვითნებურად, სამუშაოები არ წარმოებს განწესის ან განკარგულების შესაბამისად. "
const fiftyEight = "           ელექტროდანადგარებზე მომუშავე პერსონალი სამუშაოს სპეციფიკიდან გამომდინარე არ არის გაცნობილი წინამდებარე წესებს დაკავებული თანამდებობების ან პროფესიის შესაბამისად. მომუშავე ვალდებულია აღნიშნული მოწმობა სამუშაოზე ყოფნის დროს მუდმივად იქონიოს თან."
const fiftyNine = "           დარღვეულია მაღალი წნევის ჭურჭლების (ბალონების) როგორც  შევსებული, ასევე ცარიელის შენახვის, გადატანის და ექსპლუატაციის წესები."
const sixty = "           ობიექტზე ტვირთის გადასაადგილებლად გამოიყენეთ სპეციალური მექანიკური მოწყობილობები რათა გამოირიცხოს ტვირთის ხელით აწევის და გდაადგილების აუცილებლობა."
const sixtyOne="           ობიექტზე არსებული ავტოგასამართი სადგური (აგს) არ არის რეგლამენტის შესაბამისად."
const sixtyTwo="           საწარმოში არ ხდება საშიში ქიმიური ნივთიერებების შესანახი ტარის, მაგალითად:  ნავთობპროდუქტების ნიშანდება-ეტიკეტირება. ეტიკეტირება უნდა იყოს ქართულ ენაზე და ნიშანდება უნდა გაუკეთდეს საშიშ ქიმიურ ნივთიერებებს ისე, რომ ის დასაქმებულებისთვის იყოს ადვილად აღსაქმელი. საშიში ქიმიური ნივთიერებების განთავსება მოახდინეთ სპეციალურ სათავსოში, რომელსაც ექნება ბუნებრივი ან ხელოვნური ვენტილაცია და კარებზე თვალსაჩინო ადგილას მაფრთხილებელი/ამკრძალავი ნიშნები."
const sixtyThree = "    შრომის უსაფრთხოების ნორმების დარღვევების საფუძველზე გაიცა შემდეგი მითითებები:"
const sixtyFour = "     დამრღვევის ახსნა-განმარტება მითითების ვადასთან დაკავშირებით"
const sixtyFive = "(ზედამხედველი ორგანოს მიერ დადგენილი გონივრული ვადა შეიძლება "
const sixtySix = "შეთანხმდეს სამართალდამრღვევთან, რომელსაც ხელს აწერს ორივე მხარე)"
const sixtySeven = "მითითების გამოსასწორებელი ვადა შეადგენს  30 (ოცდაათი)  კალენდარულ დღეს."
const sixtyEight = "მითითების გამცემი (თანამდებობა, სახელი, გვარი):"
const sixtyNine = "საქართველოს ოკუპირებული ტერიტორიებიდან დევნილთა, შრომის, ჯანმრთელობისა და სოციალური დაცვის სამინისტროს, სსიპ შრომის ინსპექციის სამსახურის, ინსპექტორები: -------- ---------------    ----------------      -----------------"
const seventy = "შრომის უსაფრთხოების ნორმების დაცვის შემოწმების განმახორციელებელი სამსახური ამ გაცემული მითითებით დადგენილი ვადის გასვლის შემდეგ ამოწმებს სამართალდამრღვევს, რის შესახებაც დგება შემოწმების აქტი. შემოწმების აქტში აღინიშნება საწარმოს ფაქტობრივი მდგომარეობა მითითების პირობებთან მიმართებით, კერძოდ:"
const seventyOne = "ა) მითითება შესრულდა. "
const seventyTwo = "ბ) მითითება არ შესრულდა. "
const seventyThree = "მითითების შეუსრულებლობის შემთხვევაში, შრომის უსაფრთხოების ნორმების შემოწმების განმახორციელებელი სამსახურის უფლებამოსილი პირი იყენებს შესაბამის ადმინისტრაციულ სახდელს და აღნიშნავს მას ადმინისტრაციულ სამართალდარღვევათა ოქმში."
const seventyFour = "მითითება ჩაიბარა (სახელი, გვარი, პირადი ნომერი, მიღების თარიღი,ხელმოწერა):"
const seventyFive = "სამართალდამრღვევი პირის მიერ მითითების ჩაბარებაზე უარის აღნიშვნა"
const seventySix = "სსიპ შრომის ინსპექციის სამსახურის უფლებამოსილი პირ(ები)ი:"
const seventySeven = "------------            ----------------------"
const seventyEight = "შპს „----------------“  ს/ნ:-------------------  წარმომადგენელი:"
const seventyNine ="                                                                                                                                                             "
app.post('/generate-docx', function (req, res) {
    const docx = officegen({
        type: 'docx',
        pageMargins: { top: 705, right: 1353, bottom: 1440, left: 1440 }
        
      });
      var data = [];
      if(input.checkboxes[0] == "არა") {
        data.push('100 ან მეტი დასაქმებულის შემთხვევაში დამსაქმებელი ვალდებულია ბრძანებით შექმნას  შრომის უსაფრთხოების სამსახური არანაკლებ 2 შრომის უსაფრთხოების სერთიფიცირებული სპეციალისტით, ან მოიწვიოს შესაბამისი სამსახური. „შრომის უსაფრთხოების სპეციალისტის აკრედიტებული პროგრამის მოცულობის, განხორციელების წესისა და პირობების დამტკიცების შესახებ“ საქართველოს ოკუპირებული ტერიტორიებიდან დევნილთა, შრომის, ჯანმრთელობისა და სოციალური დაცვის მინისტრის 2018 წლის 31 ოქტომბრის N01/25ნ  ბრძანებით დადგენილ მოთხოვნების შესაბამისად.\r\nკანონი:\r\nსაქართველოს ორგანული კანონი „ შრომის უსაფრთხოების შესახებ“\r\nმუხლი 7, პუნქტი 2.')
      }
      if(input.checkboxes[1] == "არა") {
        data.push('ორგანიზაციამ შეიმუშაოს და დანერგოს თანმდევრული პრევენციის ღონისძიებების პოლიტიკა, რომელიც უნდა ითვალისწინებდეს საწარმოო გარემოს და შრომის პროცესის თავისებურებებს. საფრთხის შემცველი ფაქტორების ანალიზის საფუძველზე შეიმუშავეთ წერილობითი დოკუმენტი თანმიმდევრული პრევენციული ღონისძიებების  შესახებ, რომელიც დაფუძნებული იქნება სამუშაო სივრცეში და სამუშაო ადგილებზე საფრთხეების იდენტიფიცირების, რისკის შეფასების და მართვის სისტემაზე. კერძოდ:\r\n 1. გამოავლინეთ  საფრთხის შემცველი ფაქტორები;\r\n 2. გამოავლინეთ ის დასაქმებულები რომლებიც იმყოფებიან საფრთხის ქვეშ; \r\n3. შეაფასეთ რისკები და დაგეგმეთ გასატარებელი ღონისძიებები; \r\n4. გაატარეთ შესაბამისი ღონისძიებები საფრთხეების აღმოფხვრისა და რისკების შესამცირებლად; \r\n5. აწარმოეთ სისტემატური მონიტორინგი და აკონტროლეთ ნარჩენი რისკები. \r\nსამუშაო ადგილზე და სამუშაო სივრცეში განსაზღვრეთ კონკრეტული დანადგარებიდან, საწარმოო პროცესებიდან გამომდინარე საფრთხეები და დანერგეთ რისკის შეფასების სისტემა. საკონტროლო ღონისძიებების განსაზღვრისას გაითვალისწინეთ ადამიანური ფაქტორები და აკონტროლეთ ნარჩენი რისკები.\r\nკანონი:\r\n საქართველოს ორგანული კანონი „შრომის უსაფრთხოების შესახებ“\r\n მუხლი 6, პუნქტი 1. „ა,ბ,გ,დ,ე,ვ.“ ქვეპუნქტები.\r\n საქართველოს ოკუპირებული ტერიტორიებიდან დევნილთა, შრომის, ჯანმრთელობისა და სოციალური დაცვის მინისტრის 2020 წლის 30 იანვარის ბრძანება №01-15/ნ.')
      }
      if(input.checkboxes[2] == "არა") {
        data.push('უზრუნველყავით დასაქმებულებისათვის სწავლების (ტრენინგების) და ინსტრუქტაჟების ჩატარება და მათთვის გასაგებ ენაზე მიაწოდეთ ინფორმაცია: შრომის უსაფრთხოების უზრუნველსაყოფად სამართლებრივი და სხვა ნორმების უსაფრთხო შრომის პრინციპების შესახებ.ასევე არსებული საფრთხისა და რისკის, აგრეთვე მათი კონტროლის მიზნით განხორციელებული ღონისძიებების შესახებ. დასაქმებულებს, სხვა პირებს ან/და დასაქმებულთა წარმომადგენლებს მიაწოდეთ ადეკვატური ინფორმაცია და ინსტრუქციები ინდივიდუალური დაცვის საშუალების თითოეული დეტალისა და მათი გამოყენების წესის შესახებ და უზრუნველყავით აღნიშნული ინფორმაციის გავრცელება და ხელმისაწვდომობა საწარმოს ან/და დაწესებულების შიგნით;  წინასწარ აცნობეთ დასაქმებულებსა და სხვა პირებს იმ საფრთხ(ეებ)ის შესახებ, რომლისგანაც/რომლებისგანაც იცავს მათ ინდივიდუალური დაცვის საშუალებები ასევე დასაქმებულებსა და სხვა პირებს ჩაუტარეთ ინსტრუქტაჟი და საჭიროების შემთხვევაში, ორგანიზება გაუწიეთ ინდივიდუალური დაცვის საშუალებების გამოყენების შესახებ პრაქტიკულ სწავლებებს.\r\nკანონი:\r\n საქართველოს ორგანული კანონი „შრომის უსაფრთხოების შესახებ“\r\n მუხლი 5, პუნქტი 2, პუნქტი 3.\r\n საქართველოს მთავრობის 2022 წლის 23 დეკემბრის დადგენილება №590 ტექნიკური რეგლამენტი „სამუშაო სივრცეში ინდივიდუალური დაცვის საშუალებების გამოყენებისას უსაფრთხოებისა და ჯანმრთელობის დაცვასთან დაკავშირებული მინიმალური მოთხოვნების დამტკიცების თაობაზე“. მუხლი 7. პუნქტი 1.')
      }
      if(input.checkboxes[3] == "არა") {
        data.push('დასაქმებულები და სამუშაო სივრცეში მყოფი სხვა პირი უფასოდ აღჭურვეთ სამუშაო სპეციფიკიდან გამომდინარე  აუცილებელი ეფექტიანი ინდივიდუალური დაცვის საშუალებებით,  განსაზღვრეთ ინდივიდუალური დაცვის საშუალებების ნუსხა დასაქმებულის პროფესიის გათვალისწინებით და დასაქმებულებს მიაწოდეთ ინფორმაცია მათი გამოყენების ზოგადი წესის შესახებ. აგრეთვე უზრუნველყავით მათი გამართული ფუნქციონირება და სათანადო ჰიგიენური პირობების დაცვა შესაბამისი მოვლის, შეკეთებისა და შეცვლის გზით.\r\nინდივიდუალური დაცვის საშუალებების შეფასებისას მოახდინეთ  იმ რისკების ანალიზი და შეფასება, რომელთა თავიდან აცილება შეუძლებელია სხვა საშუალებებით, განსაზღვრეთ ის მახასიათებლები, რომლებიც უნდა ჰქონდეს ინდივიდუალური დაცვის საშუალებას არსებული საფრთხეების და  მათგან მომდინარე რისკების  ეფექტიანად გამკლავებისთვის.\r\nკანონი:\r\n  საქართველოს მთავრობის 2022 წლის 23 დეკემბრის №590 დადგენილება  ტექნიკური რეგლამენტი – სამუშაო სივრცეში ინდივიდუალური დაცვის საშუალებების გამოყენებისას უსაფრთხოებისა და ჯანმრთელობის დაცვასთან დაკავშირებული მინიმალური მოთხოვნების დამტკიცების თაობაზე.\r\n მუხლი 4, პუნქტი 4, პუნქტი 5, პუნქტი 6. მუხლი 6.\r\n საქართველოს ორგანული კანონი „ შრომის უსაფრთხოების შესახებ“ მუხლი 5, პუნქტი 1. „ვ.ბ“ ქვეპუნქტი.  მუხლი 6, პუნქტი 3. „ზ“ ქვეპუნქტი.')
      }
      if(input.checkboxes[4] == "არა") {
        data.push('ფუნქციების განაწილების საფუძველზე წერილობით განსაზღვროს შრომის უსაფრთხოების სფეროში შესაბამისი დასაქმებულების და სამუშაო სივრცეში მყოფი სხვა პირების ვალდებულებები და პასუხისმგებლობა.\r\n კანონი   \r\n საქართველოს ორგანული კანონი „შრომის უსაფრთხოების შესახებ“\r\n მუხლი 6, პუნქტი 3, „ა“ ქვეპუნქტი.')
      }
      if(input.checkboxes[5] == "არა") {
        data.push('საწარმო აღჭურვეთ შესაბამისი კოლექტიური დაცვის საშუალებებით და მიანიჭეთ მათ უპირატესობა ინდივიდუალურ დაცვის საშუალებებთან შედარებით. მბრუნავი მექანიზმები დაფარეთ/დახურეთ შესაბამისი ხუფით; საწარმოს ტერიტორიაზე გამიჯნეთ ავტომობილების და ფეხით მოსიარულეთა სავალი გზები.  ასევე ობიექტზე მოსაწესრიგებელია ელ.გაყვანილობები. ჩამოსხმის საამქრო, საწყობი და აბანო-გასახდელები აღჭურვეთ შესაბამისი კოლექტიური დაცვის საშუალებებით, დაამონტაჟეთ და მოაწყვეთ სავენტილაციო სისტემები, რომელიც უზრუნველყოფს დასაქმებულების ჯანმრთელობისათვის უსაფრთხო და ჯანსაღ სამუშაო გარემოს. სავენტილაციო დანადგარები უნდა იყოს გამოცდილი მათი ეფექტურობის მიზნით.\r\nკანონი:\r\nსაქართველოს ორგანული კანონი „ შრომის უსაფრთხოების შესახებ“\r\n  მუხლი 6, პუნქტი 1. „ ზ“ ქვეპუნქტი. მუხლი 6, პუნქტი 3. „ვ“ ქვეპუნქტი.')
      }
      if(input.checkboxes[6] == "არა") {
        data.push('დამსაქმებელი ვალდებულია საქართველოს კანონმდებლობით გათვალისწინებული პერიოდულობით შეამოწმოს, გაზომოს და შეაფასოს საწარმოო გარემოს ფიზიკურ ფაქტორები: (მიკროკლიმატის პარამეტრები, ხმაური, ვიბრაცია, მავნე აირები, მტვერი და განათება). ასევე გაწეროს, დაგეგმოს, დანერგოს და გაატაროს შესაბამისი ღონისძიებები, რათა ზემოთ ხსენებულმა ფაქტორებმა საფრთხე არ შეუქმნას როგორც დასაქმებულებს ასევე სამუშაო სივრცეში მყოფი სხვა პირების სიცოცხლეს და ჯანმრთელობას.\r\nკანონი:\r\n საქართველოს მთავრობის 2014 წლის 15 იანვრის დადგენილება №69  „საწარმოო სათავსების მიკროკლიმატისადმი წაყენებული ჰიგიენური მოთხოვნების დამტკიცების შესახებ“.\r\n„გარემოს ხარისხობრივი მდგომარეობის ნორმების დამტკიცების შესახებ“ საქართველოს შრომის, ჯანმრთელობისა და სოციალური დაცვის მინისტრის 2001 წლის 16 აგვისტოს ბრძანება N297/ნ.\r\n საქართველოს მთავრობის დადგენილება №67 2014 წლის 15 იანვარი ტექნიკური რეგლამენტი ,,სამუშაო ზონის ჰაერში ფიბროგენული, შერეული ტიპის მოქმედების აეროზოლებისა და ლითონების ზღვრულად დასაშვები კონცენტრაციების დამტკიცების შესახებ“საქართველოს კანონი „შრომის უსაფრთხოების შესახებ“.\r\n საქართველოს მთავრობის დადგენილება №70 2014 წლის 15 იანვარი ტექნიკური რეგლამენტი - სამუშაო ზონის ჰაერში მავნე ნივთიერებების შემცველობის ზღვრულად დასაშვები კონცენტრაციების დამტკიცების შესახებ.\r\n საქართველოს ორგანული კანონი „შრომის უსაფრთხოების შესახებ“ მუხლი 5, პუნქტი 1. „ზ“ და „ზ.ა“ ქვეპუნქტები.')
      }
      if(input.checkboxes[7] == "არა") {
        data.push('დამსაქმებელი ვალდებულია სამუშაო სივრცეში განათავსოს უსაფრხოების ან/და ჯანმრთელობის დაცვასთან დაკავშირებული  სავალდებულო, მაფრთხილებელი და ამკრძალავი ნიშნები.\r\nკანონი:\r\nსაქართველოს მთავრობის დადგენილება №457 2022 წლის 16 სექტემბერი  ტექნიკური რეგლამენტის „სამუშაო სივრცეში უსაფრთხოების ან/და ჯანმრთელობის დაცვასთან დაკავშირებული ნიშნების განთავსების მინიმალური მოთხოვნების დამტკიცების თაობაზე“  მუხლი 3, პუნქტი 1. დანართი N1 დან დანართი N9 ის ჩათვლით.')
      }
      if(input.checkboxes[8] == "არა") {
        data.push('ობიექტი უზრუნველყავით პირველადი სამედიცინო დახმარების საშუალებებით.\r\nკანონი:\r\n საქართველოს ორგანული კანონი „შრომის უსაფრთხოების შესახებ“\r\n მუხლი 8, პუნქტი 1.')
      }
      if(input.checkboxes[9] == "არა") {
        data.push('ობიექტზე აღრიცხეთ უბედური შემთხვევები, პროფესიული დაავადებები და საშიში შემთხვევები.\r\nკანონი:\r\nსაქართველოს ორგანული კანონი „ შრომის უსაფრთხოების შესახებ“\r\n მუხლი 5. პუნქტი 1, ,,დ“ ქვეპუნქტი.')
      }
      if(input.checkboxes[10] == "არა") {
        data.push('დამსაქმებელი ვალდებულია გასწიოს სამუშაო სივრცეში სანიტარიულ-ჰიგიენურ ღონისძიებებთან დაკავშირებული ყველა ხარჯი. აბანო-გასახდელებში, საპირფარეშოებში, კვების და შესვენება/დასვენებისთვის გამოყოფილი ადგილებში, ჩატარდეს სანიტარიულ-ჰიგიენური და სანიტარიულ-ტექნიკური სარემონტო სამუშაოები\r\nკანონი:\r\nსაქართველოს ორგანული კანონი „შრომის უსაფრთხოების შესახებ“\r\n მუხლი 5, პუნქტი 10.')
      }
      if(input.checkboxes[11] == "არა") {
        data.push('შიდა მარეგულირებელი ნორმებით განსაზღვრეთ და გამოყავით პირი, რომელიც  ზედამხედველობას გაუწევს და გააკონტროლებს ალკოჰოლური, ნარკოტიკული და ფსიქოტროპული  სიმთვრალის მდგომარეობაში მყოფი დასაქმებულების სამუშაოზე არდაშვებას.\r\nკანონი:\r\n საქართველოს ორგანული კანონი „ შრომის უსაფრთხოების შესახებ“\r\n  მუხლი 6, პუნქტი 3. „ი“ ქვეპუნქტი.')
      }
      if(input.checkboxes[12] == "არა") {
        data.push('საწარმოს სპეციფიკიდან გამომდინარე, უსაფრთხო და ჯანსაღი სამუშაო პირობების უზრუნველსაყოფად და სამუშაო ადგილზე პროფესიული დაავადებების თავიდან ასაცილებლად დამსაქმებელი ვალდებულია: უზრუნველყოს დასაქმებულისთვის წინასწარი და პერიოდული სამედიცინო შემოწმების ჩატარება საქართველოს კანონმდებლობით გათვალისწინებულ შემთხვევებში. ')
      }
      if(input.checkboxes[13] == "არა") {
        data.push('უზრუნველყოს რისკის შემცველ სამუშაო ადგილებზე მხოლოდ იმ დასაქმებულისა და სამუშაო სივრცეში მყოფი სხვა პირის დაშვება, რომლებმაც გაიარეს შესაბამისი სპეციალური სწავლება ან ინსტრუქტაჟი.\r\nკანონი\r\nსაქართველოს ორგანული კანონი „შრომის უსაფრთხოების შესახებ“\r\n მუხლი 6, პუნქტი 3, „ბ“ ქვეპუნქტი.  ')
      }
      if(input.checkboxes[14] == "არა") {
        data.push('შეამოწმეთ ტექნიკური აღჭურვილობების და მანქანა-დანადგარების უსაფრთხოების მდგომარეობა კომპეტენტური პირების მიერ და დამოახდინეთ მისი დოკუმენტირება. უზრუნველყოს სამუშაო სივრცისა და სივრცეში არსებული მოწყობილობებისა და დანადგარების ტექნიკური გამართულობა და დაუყოვნებლივ მიიღოს შესაბამისი ზომები იმ გამოვლენილი დარღვევების წინააღმდეგ, რომლებმაც შეუძლიათ, ზიანი მიაყენონ სამუშაო ადგილზე დასაქმებულთა და სხვა პირთა უსაფრთხოებასა და ჯანმრთელობას; რისკის დონისა და მწარმოებლის მითითებების (ტექნიკური პასპორტი, ტექნიკური მახასიათებლები და სხვა) გათვალისწინებით, უზრუნველყავით მოწყობილობების და დანადგარების ტექნიკური გამართულობა და ექსპლუატაცია მწარმოებლის ტექნიკური პასპორტის და ტექნიკური მახასიათებლების შესაბამისად.\r\nკანონი:\r\nსაქართველოს ორგანული კანონი „შრომის უსაფრთხოების შესახებ“\r\n  მუხლი 5, პუნქტი 1, „ვ.ა“ქვეპუნქტი.')
      }
      if(input.checkboxes[15] == "არა") {
        data.push('დამსაქმებელი ვალდებულია უზრუნველყოს სამუშაო სივრცის რეგულარული დაასუფთავება, სამუშაო მოწყობილობების და დანადგარების, ასევე სამუშაო სივრცესთან დაკავშირებული სხვა ადგილები მოწესრიგდეს/მოეწყოს იმგვარად, რომ დასაქმებულთა სამუშაო ადგილები იყოს მუდმივად სუფთა.\r\nკანონი:\r\nსაქართველოს მთავრობის 2022 წლის 1 ივლისის დადგენილება № 341 „სამუშაო სივრცეში უსაფრთხოებისა და ჯანმრთელობის დაცვის მინიმალური მოთხოვნების ტექნიკური რეგლამენტი“.\r\n მუხლი 3, პუნქტი 1. „დ“ ქვეპუნქტები.')
      }
      if(input.checkboxes[16] == "არა") {
        data.push('სამუშაო სივრცე უნდა მოეწყოს მაქსიმალურად ერგონომიულად. დამსაქმებელმა სამუშაო პროცესის ყველა ეტაპზე უნდა უზრუნველყოს სამუშაოს ადაპტირება დასაქმებულთან, განსაკუთრებით სამუშაო სივრცის მოწყობის, სამუშაო აღჭურვილობის, სამუშაო და საწარმოო მეთოდების შერჩევის თვალსაზრისით, მონოტონური სამუშაოს შემსუბუქებისა და დასაქმებულის ჯანმრთელობაზე სამუშაო გარემოსა და სამუშაო პროცესების მავნე ზეგავლენის შესამცირებლად.\r\nკანონი:\r\nსაქართველოს მთავრობის 2022 წლის 1 ივლისის დადგენილება № 341 „სამუშაო სივრცეში უსაფრთხოებისა და ჯანმრთელობის დაცვის მინიმალური მოთხოვნების ტექნიკური რეგლამენტი“.\r\n მუხლი 3, პუნქტი 3.')
      }
      if(input.checkboxes[17] == "არა") {
        data.push('საქართველოს კანონმდებლობით გათვალისწინებული წესით უზრუნველყავით ამწე მოწყობილობის  პერიოდული ტექნიკური ინსპექტირების ჩატარება.\r\nკანონი:\r\nსაქართველოს მთავრობის 2013 წლის 31 დეკემბრის №429 დადგენილება "ამწე მოწყობილობების მოწყობისა და უსაფრთხო ექსპლუატაციის შესახებ ტექნიკური რეგლამენტის დამტკიცების თაობაზე"\r\n მუხლი 29. პუნქტი 3.')
      }
      if(input.checkboxes[18] == "არა") {
      }
      if(input.checkboxes[19] == "არა") {
        data.push('ამწეების ექსპლუატაციის გამწევი იურიდიული და ფიზიკური პირები, ვალდებული არიან დანიშნონ პასუხისმგებელი პირები ამწეების ტექნიკური გამართულობის, უსაფრთხო ექსპლუატაციის და ზედამხედველობის უზრუნველსაყოფად.\r\n კანონი \r\n საქართველოს მთავრობის 2013 წლის 31 დეკემბრის  №429 დადგენილება "ამწე მოწყობილობების მოწყობისა და უსაფრთხო ექსპლუატაციის შესახებ ტექნიკური რეგლამენტის დამტკიცების თაობაზე"\r\n მუხლი 29. პუნქტი 2 ”ა“ ქვეპუნქტი.')
      }
      if(input.checkboxes[20] == "არა") {
        data.push('ამწის სამართავი კაბინა, აღჭურვილი უნდა იყოს მემანქანისათვის განკუთვნილი სტაციონარული (რეგულირებადი) სკამით ისე, რომ ამწის მემანქანეებმა დამჯდარმა შეძლოს ამწის მართვა და ტვირთის გადაადგილებაზე დაკვირვება. კაბინები შესრულებული და შემინული უნდა იყოს ისე, რომ უზრუნველყოფილი იყოს მათში სათანადო ტემპერატურული რეჟიმი, ოპტიმალური მიკროკლიმატური პირობები, რომელიც დადგენილია ადამიანის ოპტიმალური სითბური და ფუნქციური მდგომარეობის კრიტერიუმების მიხედვით. ამ მიზნით, ამწის კაბინებში უზრუნველყავით შესაბამისი საინჟინრო ღონისძიებები.\r\nკანონი:\r\nსაქართველოს მთავრობის 2013 წლის 31 დეკემბრის N429 დადგენილება ,,ამწე მოწყობილობების მოწყობისა და უსაფრთხო ექსპლუატაციის შესახებ ტექნიკური რეგლამენტის დამტკიცების თაობაზე“.\r\n მუხლი 15. მე-10 და მე-11პუნქტები.')
      }
      if(input.checkboxes[21] == "არა") {
        data.push('დამსაქმებლის ვალდებულებაა ელექტროდანადგარებზე მომუშავე პერსონალის კონტროლი და შემოწმება, რომ იცოდეს წინამდებარე წესები დაკავებული თანამდებობების ან პროფესიის შესაბამისად და მინიჭებული ჰქონდეს ელექტროუსაფრთხოების ჯგუფი დანართი №2-ის მიხედვით. მომუშავეს, რომელმაც გაიარა წესების ცოდნის შემოწმება, ეძლევა დადგენილი ფორმის მოწმობა (დანართი №1). მომუშავე ვალდებულია აღნიშნული მოწმობა სამუშაოზე ყოფნის დროს მუდმივად იქონიოს თან.\r\n კანონი \r\n საქართველოს მთავრობის 2013 წლის 17 დეკემბერის დადგენილება №340 „ელექტროდანადგარების ექსპლუატაციისას უსაფრთხოების ტექნიკის წესების დამტკიცების შესახებ“\r\n მუხლი 4, პუნქტი 4.')
      }
      if(input.checkboxes[22] == "არა") {
        data.push('ელექტროდანადგარების შენობის, კამერების, ფარების და შემკრებების კარები დაკეტილი უნდა იყოს ბოქლომით.\r\n კანონი \r\n საქართველოს მთავრობის 2013 წლის 17 დეკემბერის დადგენილება №340 ელექტროდანადგარების ექსპლუატაციისას უსაფრთხოების ტექნიკის წესების დამტკიცების შესახებ \r\n მუხლი5, პუნქტი12.')
      }
      if(input.checkboxes[23] == "არა") {
        data.push('მოქმედ ელექტროდანადგარებში მუშაობა აწარმოეთ განწესის შესაბამისად, რომლის ფორმა და მითითებები მისი შევსების შესახებ მოყვანილია №4 დანართში. აკრძალულია განწესის ან განკარგულების გაცემის გარეშე თვითნებური მუშაობა, აგრეთვე განწესით ან განკარგულებით განსაზღვრული სამუშაო ადგილის და დავალების მოცულობის გაფართოება. \r\n კანონი \r\n საქართველოს მთავრობის 2013 წლის 17 დეკემბერის დადგენილება №340 „ელექტროდანადგარების ექსპლუატაციისას უსაფრთხოების ტექნიკის წესების დამტკიცების შესახებ“\r\n მუხლი 6, პუნქტი 1, პუნქტი 2.')
      }
      if(input.checkboxes[24] == "არა") {
        data.push('დამსაქმებლის ვალდებულებაა ელექტროდანადგარებზე მომუშავე პერსონალის კონტროლი და შემოწმება, რომ იცოდეს წინამდებარე წესები დაკავებული თანამდებობების ან პროფესიის შესაბამისად და მინიჭებული ჰქონდეს ელექტროუსაფრთხოების ჯგუფი დანართი №2-ის მიხედვით. მომუშავეს, რომელმაც გაიარა წესების ცოდნის შემოწმება, ეძლევა დადგენილი ფორმის მოწმობა (დანართი №1). მომუშავე ვალდებულია აღნიშნული მოწმობა სამუშაოზე ყოფნის დროს მუდმივად იქონიოს თან.\r\n კანონი \r\n საქართველოს მთავრობის 2013 წლის 17 დეკემბერის დადგენილება №340 „ელექტროდანადგარების ექსპლუატაციისას უსაფრთხოების ტექნიკის წესების დამტკიცების შესახებ“\r\n მუხლი 4, პუნქტი 4.')
        
      }
      if(input.checkboxes[25] == "არა") {
        data.push('შევსებული და ცარიელი ბალონები შეინახეთ კანონმდებლობით დადგენილი წესის შესაბამისად.\r\n კანონი \r\n საქართველოს მთავრობის 2014 წლის 15 იანვარი დადგენილება № 79 „ჰაერის დაყოფის პროდუქტების წარმოებისა და მოხმარების შესახებ ტექნიკური რეგლამენტი“-ს\r\n მუხლი 17, პუნქტი 2.')
      }
      if(input.checkboxes[26] == "არა") {
        data.push('დამსაქმებელი ვალდებულია მიიღოს სათანადო ორგანიზაციული ზომები ან გამოიყენოს შესაბამისი საშუალებები, განსაკუთრებით მექანიკური მოწყობილობები, რათა თავიდან აიცილოს დასაქმებულთა და სამუშაო სივრცეში მყოფ სხვა პირთა მიერ ტვირთის ხელით აწევის აუცილებლობა.\r\n კანონი \r\n საქართველოს მთავრობის 2023 წლის 1 მაისის დადგენილება №167ტვირთის ხელით აწევისას უსაფრთხოებისა და ჯანმრთელობის დაცვის მინიმალური მოთხოვნების შესახებ ტექნიკური რეგლამენტის დამტკიცების თაობაზე.\r\n მუხლი 3.')
      }
      if(input.checkboxes[27] == "არა") {
        data.push('ობიექტზე არსებული ავტოგასამართი სადგური მოეწყოს რეგლამენტის შესაბამისად. \r\n კანონი \r\n საქართველოს მთავრობის დადგენილება №60 2014 წლის 15 იანვარი ავტოგასამართი სადგურებისა და ავტოგასამართი კომპლექსების უსაფრთხოების შესახებ ტექნიკური რეგლამენტის დამტკიცების თაობაზე.\r\n მუხლი 11, მუხლი 13, მუხლი 22.')
      }
      if(input.checkboxes[28] == "არა") {
        data.push('საწარმოში  არსებულ საშიში ქიმიური ნივთიერებების ნიშანდება, ეტიკეტირება  მოახდინეთ რეგლამენტის შესაბამისად. \r\n კანონი \r\n საქართველოს მთავრობის 2013 წლის 31 დეკემბრის №428 დადგენილება საშიში ქიმიური ნივთიერებების ნიშანდებისა და ეტიკეტირების ტექნიკური რეგლამენტი.')
      }
      
      var table = [
  [
    { val: "N", opts: { cellColWidth: 1000, b:true, sz: '24',align: "center", } },
    { val: "გაცემული მითითებები:",  opts: { cellColWidth:4000, b:true, align: "center",sz: '24', } },

  ],
  ...data.map((item, index) => [
    { val: `${index+1}`, opts: { cellColWidth: 1000, b:true, sz: '24',align: "center", } }, 
    item,
    
  ]) // This will create new rows with the array indices as IDs and the array items as data
];

var tableStyle = {
  tableSize: 24,
  tableAlign: "left",
  tableFontFamily: "sylfaen",
  borders: true,
  
};


    pObj0 = docx.createP({
      align: 'right',
      
    });
    pObj = docx.createP({
        align: 'center',
      });
      pObj1 = docx.createP({
        align: 'center',
      });
      pObj2 = docx.createP({
        align: 'center',
      });
      pObj3 = docx.createP({
        align: 'center',
      });
      pObj4 = docx.createP({
        align: 'center',
      });
      pObj5 = docx.createP({
        align: 'center',
      });
      pObj6 = docx.createP({
        align: 'center',
      });
      pObj7 = docx.createP({
        align: 'justify',
      });
      pObj8 = docx.createP({
        align: 'justify',

      });
      pObj9 = docx.createP({
        align: 'justify',

      });
      pObj10 = docx.createP({
        align: 'justify',

      });
      pObj11 = docx.createP({
        align: 'justify',

      });
      pObj12 = docx.createP({
        align: 'justify',

      });
      pObj13 = docx.createP({
        align: 'justify',

      });
      pObj14 = docx.createP({
        align: 'justify',

      });
      pObj15 = docx.createP({
        align: 'justify',

      });
      pObj16 = docx.createP({
        align: 'justify',

      });
      pObj17 = docx.createP({
        align: 'justify',

      });
      pObj18 = docx.createP({
        align: 'justify',

      });
      pObj19 = docx.createP({
        align: 'justify',

      });
      pObj20 = docx.createP({
        align: 'justify',

      });
      pObj21 = docx.createP({
        align: 'justify',

      });
      pObj22 = docx.createP({
        align: 'justify',

      });
      pObj23 = docx.createP({
        align: 'justify',

      });
      pObj24 = docx.createP({
        align: 'justify',

      });
      if(input.checkboxes[0] == 'არა') {
        pObj25 = docx.createP({
          align: 'justify',
          
        });
      }
      if(input.checkboxes[1] == 'არა') {
        pObj26 = docx.createP({
          align: 'justify',
          
        });
      }

      if(input.checkboxes[2] == 'არა') {
        pObj27 = docx.createP({
          align: 'justify',
          
        });
        pObj28 = docx.createP({
          align:'left'
          
        })
        
        
      }
      if(input.checkboxes[3] == 'არა') {
        pObj29 = docx.createP({
          align:'justify'
          
        })
        pObj30 = docx.createP({
          align:'left'
          
        })
      }
      if(input.checkboxes[4] == 'არა') {
        pObj31 = docx.createP({
          align:'justify'
          
        })
      }
      if(input.checkboxes[5] == 'არა') {
        pObj32 = docx.createP({
          align:'justify'
          
        })
      }
      if(input.checkboxes[6] == 'არა') {
        pObj33 = docx.createP({
          align:'justify'
          
        })
      }
      if(input.checkboxes[7] == 'არა') {
        pObj34 = docx.createP({
          align:'justify'
          
        })
      }
      if(input.checkboxes[8] == 'არა') {
        pObj35 = docx.createP({
          align:'justify'
          
        })
      }
      if(input.checkboxes[9] == 'არა') {
        pObj36 = docx.createP({
          align:'justify'
          
        })
      }
      if(input.checkboxes[10] == 'არა') {
        pObj37 = docx.createP({
          align:'justify'
          
        })
      }
      if(input.checkboxes[11] == 'არა') {
        pObj38 = docx.createP({
          align:'justify'
          
        })
      }
      if(input.checkboxes[12] == 'არა') {
        pObj39 = docx.createP({
          align:'justify'
          
        })
      }
      if(input.checkboxes[13] == 'არა') {
        pObj40 = docx.createP({
          align:'justify'
          
        })
      }
      if(input.checkboxes[14] == 'არა') {
        pObj41 = docx.createP({
          align:'justify'
          
        })
      }
      if(input.checkboxes[15] == 'არა') {
        pObj42 = docx.createP({
          align:'justify'
          
        })
      }
      if(input.checkboxes[16] == 'არა') {
        pObj43 = docx.createP({
          align:'justify'
          
        })
      }
      if(input.checkboxes[17] == 'არა') {
        pObj44 = docx.createP({
          align:'justify'
          
        })
      }
      if(input.checkboxes[18] == 'არა') {
        pObj45 = docx.createP({
          align:'justify'
          
        })
      }
      if(input.checkboxes[19] == 'არა') {
        pObj46 = docx.createP({
          align:'justify'
          
        })
      }
      if(input.checkboxes[20] == 'არა') {
        pObj47 = docx.createP({
          align:'justify'
          
        })
      }
      if(input.checkboxes[21] == 'არა') {
        pObj48 = docx.createP({
          align:'justify'
          
        })
      }
      if(input.checkboxes[22] == 'არა') {
        pObj49 = docx.createP({
          align:'justify'
          
        })
      }
      if(input.checkboxes[23] == 'არა') {
        pObj50 = docx.createP({
          align:'justify'
          
        })
      }
      if(input.checkboxes[24] == 'არა') {
        pObj51 = docx.createP({
          align:'justify'
          
        })
      }
      if(input.checkboxes[25] == 'არა') {
        pObj52 = docx.createP({
          align:'justify'
          
        })
      }
      if(input.checkboxes[26] == 'არა') {
        pObj53 = docx.createP({
          align:'justify'
          
        })
      }
      if(input.checkboxes[27] == 'არა') {
        pObj54 = docx.createP({
          align:'justify'
          
        })
      }
      if(input.checkboxes[28] == 'არა') {
        pObj55 = docx.createP({
          align:'justify'
        })
      }
      pObj56 = docx.createP({
        align:"justify"
      })
      if(checkNo != 0) {
        docx.createTable(table, tableStyle);
      }
      
      pObj57 = docx.createP({
        align:"center"
      })
      pObj58 = docx.createP({
        align:"left"
      })
      pObj59 = docx.createP({
        align:"justify"
      })
      pObj60 = docx.createP({
        align:"left"
      })
      pObj61 = docx.createP({
        align:"left"
      })
      
     
      
    pObj0.addText(zero, { font_size:12,font_face: "Sylfaen",bold: true, underline: true, italic: true,  });
    pObj.addText(first, { font_size:12,font_face: "Sylfaen",bold: true });
    pObj1.addText(second, { font_size:12,font_face: "Sylfaen",bold: true })
    pObj2.addText(third, { font_size:12,font_face: "Sylfaen",bold: true })
    pObj3.addText(fourth, { font_size:12,font_face: "Sylfaen",bold: true })
    pObj4.addText(fifth, { font_size:12,font_face: "Sylfaen",bold: true })
    pObj5.addText(sixth, { font_size:12,font_face: "Sylfaen",bold: true })
    pObj6.addText(seventh, { font_size:12,font_face: "Sylfaen",bold: true })
    pObj7.addText(eighth, { font_size:12,font_face: "Sylfaen", })
    pObj8.addText(nineth, { font_size:12,font_face: "Sylfaen", bold: true,})
    pObj8.addText(tenth, { font_size:12,font_face: "Sylfaen",})
    pObj9.addText(eleven, { font_size:12,font_face: "Sylfaen", bold: true  })
    pObj9.addText(tweleve, { font_size:12,font_face: "Sylfaen",   })
    pObj10.addText(thirteen, { font_size:12,font_face: "Sylfaen", bold: true  })
    pObj10.addText(thirteens, { font_size:12,font_face: "Sylfaen",   })
    pObj11.addText(fourteen, { font_size:12,font_face: "Sylfaen", bold: true  })
    pObj11.addText(fourteens, { font_size:12,font_face: "Sylfaen",  })
    pObj12.addText(fifteen, { font_size:12,font_face: "Sylfaen", bold: true  })
    pObj12.addText(fifteens, { font_size:12,font_face: "Sylfaen",  })
    pObj13.addText(sixteen, { font_size:12,font_face: "Sylfaen", bold: true  })
    pObj13.addText(seventeen, { font_size:12,font_face: "Sylfaen",  })
    pObj14.addText(eighteen, { font_size:12,font_face: "Sylfaen",  })
    pObj15.addText(nineteen, { font_size:12,font_face: "Sylfaen",  })
    pObj16.addText(twenty, { font_size:12,font_face: "Sylfaen",  })
    pObj17.addText(twentyOne, { font_size:12,font_face: "Sylfaen",  })
    pObj18.addText(twentyTwo, { font_size:12,font_face: "Sylfaen",  bold: true})
    pObj18.addText(twentyThree, { font_size:12,font_face: "Sylfaen",  })
    pObj19.addText(twentyFour, { font_size:12,font_face: "Sylfaen",  })
    pObj20.addText(twentyFive, { font_size:12,font_face: "Sylfaen",  })
    pObj21.addText(twentySix, { font_size:12,font_face: "Sylfaen",  })
    pObj21.addText(twentySeven, { font_size:12,font_face: "Sylfaen",  })
    pObj22.addText(twentyEight, { font_size:12,font_face: "Sylfaen", bold: true })
    pObj22.addText(twentyNine, { font_size:12,font_face: "Sylfaen",  })
    pObj23.addText(thirty, { font_size:12,font_face: "Sylfaen",  })
    pObj24.addText(thirtyOne, { font_size:12,font_face: "Sylfaen", bold: true })
    if (input.checkboxes[0] == "არა") {
       pObj25.addText(thirtyTwo, { font_size:12,font_face: "Sylfaen", })
    }
    if (input.checkboxes[1] == "არა") {
      pObj26.addText(thirtyThree, { font_size:12,font_face: "Sylfaen", })
   }
   if (input.checkboxes[2] == "არა") {
    pObj27.addText(thirtyFour, { font_size:12,font_face: "Sylfaen", })
    pObj27.addLineBreak()
    pObj27.addText(thirtyFive, { font_size:12,font_face: "Sylfaen", })
    pObj28.addText('       • ', { font_face: 'Arial', font_size: 18 });
    pObj28.addText('ინსტრუქტაჟის ჩატარების თემატიკას;', { font_face: 'sylfaen', font_size: 12 });
    
    pObj28.addLineBreak();
    pObj28.addText('       • ', { font_face: 'Arial', font_size: 18 });
    pObj28.addText('ჩატარების ადგილს;', { font_face: 'sylfaen', font_size: 12 });
    pObj28.addLineBreak();
    pObj28.addText('       • ', { font_face: 'Arial', font_size: 18 });
    pObj28.addText('ტრენერის მონაცემებს;', { font_face: 'sylfaen', font_size: 12 });
    pObj28.addLineBreak(); 
    pObj28.addText('       • ', { font_face: 'Arial', font_size: 18 });
    pObj28.addText('დამსწრე დასაქმებულების მონაცემებს და გაცნობის ხელმოწერებს.;', { font_face: 'sylfaen', font_size: 12 });
    pObj28.addLineBreak();   
    pObj28.addText('       • ', { font_face: 'Arial', font_size: 18 });
    pObj28.addText('ტრენინგის მასალებს;', { font_face: 'sylfaen', font_size: 12 });
    pObj28.addLineBreak();   
    pObj28.addText('       • ', { font_face: 'Arial', font_size: 18 });
    pObj28.addText('ჩატარების თარიღს; ', { font_face: 'sylfaen', font_size: 12 });
    pObj28.addLineBreak();           
 }
 if(input.checkboxes[3] == 'არა') {
  pObj29.addText(thirtySIx, { font_size:12,font_face: "Sylfaen", })
  pObj30.addText('      თავის ქალა', { font_size:12,font_face: "Sylfaen",bold:true })
  pObj30.addText(' - დამცავი ჩაფხუტი;', { font_size:12,font_face: "Sylfaen", })
  pObj30.addLineBreak();
  pObj30.addText('      თვალები ან/და სახე', { font_size:12,font_face: "Sylfaen",bold:true })
  pObj30.addText(' - დამცავი სათვალე, გვერდებზე დახურული დამცავი სათვალე და სახის ფარები.;', { font_size:12,font_face: "Sylfaen", })
  pObj30.addLineBreak();
  pObj30.addText('      ხელები', { font_size:12,font_face: "Sylfaen",bold:true })
  pObj30.addText(' - მექანიკური დამცავი ხელთათმანები.;', { font_size:12,font_face: "Sylfaen", })
  pObj30.addLineBreak();
  pObj30.addText('      ტერფი და ფეხი', { font_size:12,font_face: "Sylfaen",bold:true })
  pObj30.addText(' - ფეხსაცმელი უსაფრთხო დამცავი ძირით და ცხვირით. ', { font_size:12,font_face: "Sylfaen", })
  pObj30.addLineBreak();
  pObj30.addText('      ყურები', { font_size:12,font_face: "Sylfaen",bold:true })
  pObj30.addText(' - სმენის დაცვა.', { font_size:12,font_face: "Sylfaen", })
  pObj30.addLineBreak();
  pObj30.addText('      მთლიანი სხეული', { font_size:12,font_face: "Sylfaen",bold:true })
  pObj30.addText(' -  დამცავი ტანსაცმელი.', { font_size:12,font_face: "Sylfaen", })

 }
 if(input.checkboxes[4] == 'არა') {
  pObj31.addText(thirtySeven,  { font_size:12,font_face: "Sylfaen", })
 }
 if(input.checkboxes[5] == 'არა') {
  pObj32.addText(thirtyEight,  { font_size:12,font_face: "Sylfaen", })
  pObj32.addLineBreak()
  pObj32.addText("ა) კონვეიერის ქვეშ ადამიანებისა გასასვლელ ადგილებში აუცილებელია მოეწყოს დამცავი თაროები ან დაიხუროს კონვეიერის ლენტები ჩამოვარდნილი ნატეხებით ადამიანთა შესაძლო დაზიანებისაგან დასაცავად.",  { font_size:12,font_face: "Sylfaen", })
  pObj32.addLineBreak()
  pObj32.addText("ბ) დანადგარების მბრუნავი მექანიზმები არ არის დახურული/დაფარული;",  { font_size:12,font_face: "Sylfaen", })
  pObj32.addLineBreak()
  pObj32.addText("გ) ტერიტორიაზე არსებულ სალექარებზე არასრულად არის მოწყობილი მოაჯირები;",  { font_size:12,font_face: "Sylfaen", })
  pObj32.addLineBreak()
  pObj32.addText("დ) სანიაღვრე არხები არ არის დაფარული;",  { font_size:12,font_face: "Sylfaen", })
  pObj32.addLineBreak()
  pObj32.addText("ე) საწარმოს ტერიტორიაზე (ეზოში) არ არის გამიჯნული ავტომობილების და ფეხით მოსიარულეთა სავალი გზები;",  { font_size:12,font_face: "Sylfaen", })
  pObj32.addLineBreak()
  pObj32.addText("ვ) დაბალი ძაბვის ელექტრო კარადები არ არის დაკეტილი.",  { font_size:12,font_face: "Sylfaen", })
 }
 if(input.checkboxes[6] == 'არა') {
  pObj33.addText(thirtyNine,  { font_size:12,font_face: "Sylfaen", })
  pObj33.addText(fourty,  { font_size:12,font_face: "Sylfaen", })
 }
 if(input.checkboxes[7] == 'არა') {
  pObj34.addText(fourtyOne,  { font_size:12,font_face: "Sylfaen", })
  pObj34.addText("ამკრძალავი ნიშანი ",  { font_size:12,font_face: "Sylfaen", bold:true })
  pObj34.addText("(რომელიც კრძალავს ისეთ მოქმედებას, რომელსაც საფრთხის გამოწვევა შეუძლია); ",  { font_size:12,font_face: "Sylfaen",  })
  pObj34.addText("გამაფრთხილებელი ნიშანი ",  { font_size:12,font_face: "Sylfaen", bold:true }) 
  pObj34.addText(" (რომელიც ადგენს კონკრეტული ქმედების განხორციელების ვალდებულებას); ",  { font_size:12,font_face: "Sylfaen", }) 
  pObj34.addText("საევაკუაციო გასასვლელის ან პირველადი სამედიცინო დახმარების ნიშანი ",  { font_size:12,font_face: "Sylfaen", bold:true }) 
  pObj34.addText("(რომელიც იძლევა ინფორმაციას საევაკუაციო გასასვლელების, პირველადი სამედიცინო დახმარების ან სამაშველო საშუალებების შესახებ). და ა.შ",  { font_size:12,font_face: "Sylfaen",  }) 
}
if(input.checkboxes[8] == 'არა') {
  pObj35.addText(fourtyTwo, { font_size:12,font_face: "Sylfaen", })
}
if(input.checkboxes[9] == 'არა') {
  pObj36.addText(fourtyThree, { font_size:12,font_face: "Sylfaen", })
}
if(input.checkboxes[10] == 'არა') {
  pObj37.addText(fourtyFour, { font_size:12,font_face: "Sylfaen", })
}
if(input.checkboxes[11] == 'არა') {
  pObj38.addText(fourtyFive, { font_size:12,font_face: "Sylfaen", })

}
if(input.checkboxes[12] == 'არა') {
  pObj39.addText(fourtySix, { font_size:12,font_face: "Sylfaen", })

}
if(input.checkboxes[13] == 'არა') {
  pObj40.addText(fourtySeven, { font_size:12,font_face: "Sylfaen", })

}
if(input.checkboxes[14] == 'არა') {
  pObj41.addText(fourtyEight, { font_size:12,font_face: "Sylfaen", })
}
if(input.checkboxes[15] == 'არა') {
  pObj42.addText(fourtyNine, { font_size:12,font_face: "Sylfaen", })
}
if(input.checkboxes[16] == 'არა') {
  pObj43.addText(fifty, { font_size:12,font_face: "Sylfaen", })

}
if(input.checkboxes[17] == 'არა') {
  pObj44.addText(fiftyOne, { font_size:12,font_face: "Sylfaen", })

}
if(input.checkboxes[18] == 'არა') {
  pObj45.addText(fiftyTwo, { font_size:12,font_face: "Sylfaen", })
  
}
if(input.checkboxes[19] == 'არა') {
  pObj46.addText(fiftyThree, { font_size:12,font_face: "Sylfaen", })
  
}
if(input.checkboxes[20] == 'არა') {
  pObj47.addText(fiftyFour, { font_size:12,font_face: "Sylfaen", })
  
}
if(input.checkboxes[21] == 'არა') {
  pObj48.addText(fiftyFive, { font_size:12,font_face: "Sylfaen", })
  
}
if(input.checkboxes[22] == 'არა') {
  pObj49.addText(fiftySix, { font_size:12,font_face: "Sylfaen", })
  
}
if(input.checkboxes[23] == 'არა') {
  pObj50.addText(fiftySeven, { font_size:12,font_face: "Sylfaen", })

}
if(input.checkboxes[24] == 'არა') {
  pObj51.addText(fiftyEight, { font_size:12,font_face: "Sylfaen", })
}
if(input.checkboxes[25] == 'არა') {
  pObj52.addText(fiftyNine, { font_size:12,font_face: "Sylfaen", })

}
if(input.checkboxes[26] == 'არა') {
  pObj53.addText(sixty, { font_size:12,font_face: "Sylfaen", })

}
if(input.checkboxes[27] == 'არა') {
  pObj54.addText(sixtyOne, { font_size:12,font_face: "Sylfaen", })

}
if(input.checkboxes[28] == 'არა') {
  pObj55.addText(sixtyTwo, { font_size:12,font_face: "Sylfaen", })

}
pObj56.addText(sixtyThree, { font_size:12, font_face:"Sylfaen", bold:true})
pObj57.addLineBreak()
pObj57.addText(sixtyFour,{font_size:12, font_face:"Sylfaen",})
pObj57.addLineBreak()
pObj57.addText(sixtyFive, {font_size:12,font_face: "Sylfaen", underline: true, italic: true,})
pObj57.addLineBreak()
pObj57.addText(sixtySix, {font_size:12,font_face: "Sylfaen", underline: true, italic: true,})
pObj58.addText(sixtySeven,{font_size:12,font_face: "Sylfaen", underline: true, bold: true,})
pObj58.addLineBreak()
pObj58.addLineBreak()
pObj58.addText(sixtyEight,{font_size:12,font_face: "Sylfaen", align:"left"})
pObj59.addText(sixtyNine,{font_size:12,font_face: "Sylfaen", align:"justify" })
pObj59.addLineBreak()
pObj59.addText(seventy,{font_size:12,font_face: "Sylfaen", align:"justify" })

pObj60.addText(seventyOne,{font_size:12,font_face: "Sylfaen", align:"justify" })
pObj60.addLineBreak()
pObj60.addText(seventyTwo,{font_size:12,font_face: "Sylfaen", align:"justify" })
pObj61.addText(seventyThree,{font_size:12,font_face: "Sylfaen", align:"justify" })
pObj61.addLineBreak()
pObj61.addLineBreak()
pObj61.addText(seventyFour,{font_size:12,font_face: "Sylfaen", align:"justify" })
pObj61.addLineBreak()
pObj61.addLineBreak()
pObj61.addLineBreak()
pObj61.addText("___________________________________________________________________________",{font_size:12,})
pObj61.addLineBreak()
pObj61.addLineBreak()
pObj61.addLineBreak()
pObj61.addText(seventyFive,{font_size:12,font_face: "Sylfaen", align:"justify" })
pObj61.addLineBreak()
pObj61.addLineBreak()
pObj61.addLineBreak()
pObj61.addText("___________________________________________________________________________",{font_size:12,})
pObj61.addLineBreak()
pObj61.addLineBreak()
pObj61.addLineBreak()
pObj61.addText(seventySix,{font_size:12,font_face: "Sylfaen", bold:true })
pObj61.addLineBreak()
pObj61.addLineBreak()
pObj61.addText(seventySeven,{font_size:12,font_face: "Sylfaen", bold:true })
pObj61.addLineBreak()
pObj61.addLineBreak()
pObj61.addText(seventySeven,{font_size:12,font_face: "Sylfaen", bold:true })
pObj61.addLineBreak()
pObj61.addLineBreak()
pObj61.addText(seventyEight,{font_size:12,font_face: "Sylfaen", bold:true })
















    res.attachment('document.docx');
    docx.generate(res);
});
  // send a response back to the component
  res.json({ message: 'Data received' });
});

var port = 5000;
app.listen(port, function () {
    console.log('Server is listening on port ' + port);
});
apps.listen(8081, ()=> {
  console.log('listening')
})